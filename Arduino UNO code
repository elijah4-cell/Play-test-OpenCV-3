#include<AFMotor.h>

AF_DCMotor motor1(1);
AF_DCMotor motor2(2);
AF_DCMotor motor3(3);
AF_DCMotor motor4(4);

// https://howtomechatronics.com/tutorials/arduino/ultrasonic-sensor-hc-sr04/
// define pin numbers
const int trigpin = 3;
const int echopin = 2;

// define variables
long duration;
int distance;

int state = 0;
int speed = 255;
int time = 10;

void setup()
{
  pinMode (trigpin, OUTPUT);
  pinMode (echopin, INPUT);
  Serial.begin (9600);
  Serial.println("Motor test !");
}

void forward()
{
  Serial.println("Going Forward...");
  motor1.setSpeed(speed);
  motor1.run(FORWARD);
  motor2.setSpeed(speed);
  motor2.run(FORWARD);
  motor3.setSpeed(speed);
  motor3.run(FORWARD);
  motor4.setSpeed(speed);
  motor4.run(FORWARD);
}

void backward()
{
  Serial.println("Going Backward...");
  motor1.setSpeed(speed);
  motor1.run(BACKWARD);
  motor2.setSpeed(speed);
  motor2.run(BACKWARD);
  motor3.setSpeed(speed);
  motor3.run(BACKWARD);
  motor4.setSpeed(speed);
  motor4.run(BACKWARD);
}

void left()
{
  Serial.println("Turning Left...");
  motor1.setSpeed(speed);
  motor1.run(BACKWARD);
  motor2.setSpeed(speed);
  motor2.run(BACKWARD);
  motor3.setSpeed(speed);
  motor3.run(FORWARD);
  motor4.setSpeed(speed);
  motor4.run(FORWARD);
}

void right()
{
  Serial.println("Turning Right...");
  motor1.setSpeed(speed);
  motor1.run(FORWARD);
  motor2.setSpeed(speed);
  motor2.run(FORWARD);
  motor3.setSpeed(speed);
  motor3.run(BACKWARD);
  motor4.setSpeed(speed);
  motor4.run(BACKWARD);
}

void hold()
{
  Serial.println("Stop...");
  motor1.setSpeed(0);
  motor1.run(RELEASE);
  motor2.setSpeed(0);
  motor2.run(RELEASE);
  motor3.setSpeed(0);
  motor3.run(RELEASE);
  motor4.setSpeed(0);
  motor4.run(RELEASE);
}

void ultrasonic()
{
  // clears the trigpin
  digitalWrite (trigpin, LOW);
  delayMicroseconds (2);

  // trigpin on HIGH state for 10 microseconds
  digitalWrite (trigpin, HIGH);
  delayMicroseconds (10);
  digitalWrite (trigpin, LOW);

  // reads echopin, returns soundwave travel time in microseconds
  duration = pulseIn (echopin, HIGH);

  // calculating the distance
  distance = duration * 0.034 / 2;

  // print distance on serial monitor
  Serial.print ("Distance ");
  Serial.print (distance);
}

void loop() {

  if (Serial.available() > 0) {
    state = Serial.read() - '0';

    if  (state == 1) {
      right();
    }
    if  (state == 2) {
      left();
    }
    if (state == 3) {
      forward();
    }
    if (state == 4) {
      backward();
    }
    if (state == 5) {
      hold();
    }
  }

  while (Serial.available() > 0)
  {
    ultrasonic();

    if (distance < 30) {
      hold();
      delay(time);
      right();
    }
    Serial.read();
  }
}
